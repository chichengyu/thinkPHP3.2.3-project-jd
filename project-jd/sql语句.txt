create database php;
use php;
set names utf8;
drop table if exists php;
create table php_goods(
    id mediumint unsigned not null auto_increment comment 'id',
    goods_name varchar(150) not null comment '商品名称',
    mark_price decimal(10,2) not null comment '市场价格',
    shop_price decimal(10,2) not null comment '本店价格',
    goods_desc longtext comment '商品描述',
    is_on_sale enum('是','否') not null default '是' comment '是否上架',
    is_delete enum('是','否') not null default '否' comment '是否放到回收站',
    addtime datetime not null comment '添加时间',
    logo varchar(150) not null default '' comment '原图',
    sm_logo varchar(150) not null default '' comment '小图',
    mid_logo varchar(150) not null default '' comment '中图',
    big_logo varchar(150) not null default '' comment '大图',
    mbig_logo varchar(150) not null default '' comment '更大图',
    brand_id mediumint unsigned not null default '0' comment '品牌id',
    cate_id mediumint unsigned not null default '0' comment '主分类id',
    type_id mediumint unsigned not null default '0' comment '商品类型id',
    promote_price decimal(10,2) not null  default '0.00' comment '促销价格',
    promote_start_date datetime not null comment '促销开始时间',
    promote_end_date datetime not null comment '促销结束时间',
    is_new enum('是','否') not null default '否' comment '是否新品',
    is_hot enum('是','否') not null default '否' comment '是否热卖',
    is_best enum('是','否') not null default '否' comment '是否精品',
    sort_number tinyint unsigned not null default '100' comment '排序的数字',//用于前台取出数据热卖商品排序
    is_floor enum('是','否') not null default '否' comment '是否推荐楼层',
    is_updated tinyint unsigned not null default '0' comment '是否被修改',
    primary key (id),
    key shop_price(shop_price),
    key addtime(addtime),
    key is_on_sale(is_on_sale),
    key brand_id(brand_id),
    key promote_price(promote_price),
    key is_new(is_new),
    key is_hot(is_hot),
    key is_best(is_best),
    key sort_number(sort_number),
)engine=innoDB default charset=utf8 comment '商品';



create table php_brand(
    id mediumint unsigned not null auto_increment comment 'id',
    brand_name varchar(30) not null comment '品牌名称',
    site_url varchar(150) not null default '' comment '官方网站',
    logo varchar(150) not null default '' comment '品牌logo图片',
    primary key (id)
)engine=innoDB default charset=utf8 comment '品牌';


create table php_member_level(
    id mediumint unsigned not null auto_increment comment 'id',
    level_name varchar(30) not null comment '级别名称',
    jifen_bottom mediumint unsigned not null comment '积分下线',
    jifen_top mediumint unsigned not null comment '积分上线',
    primary key (id)
)engine=innoDB default charset=utf8 comment '会员级别';

//商品与会员级别的中间表(中间表一般不用id主键)
create table php_member_price(
    price decimal(10,2) not null comment '会员价格',
    level_id mediumint not null comment '级别ID',
    goods_id mediumint unsigned not null comment '商品ID',
    key level_id(level_id),
    key goods_id(goods_id)
)engine=innoDB default charset=utf8 comment '会员价格';



create table php_category(
    id mediumint unsigned not null auto_increment comment 'ID',
    cate_name varchar(30) not null comment '分类名称',
    parent_id mediumint not null default '0' comment '上级分类的ID,0:顶级分类',
    is_floor enum('是','否') not null default '否' comment '是否推荐楼层',
    primary key (id)
)engine=innoDB default charset=utf8 comment '分类';






create table php_goods_cate(
    cate_id mediumint unsigned not null comment '分类ID',
    goods_id mediumint unsigned not null comment '商品ID',
    key cate_id(cate_id),
    key goods_id(goods_id)
)engine=innoDB default charset=utf8 comment '商品扩展分类';




三张表(php_goods商品表、php_category分类表、php_goods_cate商品扩展分类表)
    查询所有商品的扩展分类名称
    思路：
        先让php_goods商品表 left join php_goods_cate商品扩展分类表,返回一个一件商品的多个扩展分类的分类id,
        然后在left join php_category分类表拿到每个分类id对应的分类名称
    sql语句如下：
        select
        d.id,d.goods_name,group_concat(c.cate_name)
        from
        (select a.id,a.goods_name,b.cate_id from php_goods a left join php_goods_cate b on a.id=b.goods_id) d
        left join
        php_category c
        ON
        c.id=d.cate_id
        group by
        d.id;

        group_concat(c.cate_name separator '、')用分号进行连接

总结一下：在添加的功能
    1.类型管理（类型表） 类型如：手机、服装
    2.属性管理（属性表） 类型的属性如：手机->手机的颜色、多大内存, 服装->服装的颜色、尺码大小
    3.商品属性管理（商品属性表）把商品与类型关联起来 如：华为->手机(类型)->(手机属性)华为手机的颜色、内存大小
    4.商品库存管理（商品库存表）

    类型表：
    create table php_type(
        id mediumint unsigned not null auto_increment comment 'ID',
        type_name varchar(30) not null comment '类型名称',
        primary key(id)
    )engine=innoDB default charset=utf8 comment '类型';

    属性表：
    create table php_attribute(
        id mediumint unsigned not null auto_increment comment 'ID',
        attr_name varchar(30) not null comment '属性名称',
        attr_type enum('唯一','可选') not null comment '属性类型',
        attr_option_values varchar(300) not null comment '属性可选值',
        type_id mediumint not null comment '所属类型id',
        primary key(id),
        key type_id(type_id)
    )engine=innoDB default charset=utf8 comment '属性';

    商品属性表：一件商品可以多个属性多个值
    create table php_goods_attr(
        id mediumint unsigned not null auto_increment comment 'ID',
        attr_values varchar(150) not null comment '属性值',
        attr_id mediumint not null comment '属性id',
        goods_id mediumint not null comment '商品ID',
        primary key(id),
        key goods_id(goods_id),
        key attr_id(attr_id)
    )engine=innoDB default charset=utf8 comment '商品属性';
    注意：查询商品属性的时候,以属性表为主,而不是以商品属性表为主
    sql语句：先查商品的所有属性,在查商品的属性值
        select
        a.goods_name,a.type_id,b.attr_name,b.id,c.*
        from
        php_goods a
        inner join
        php_attribute b
        ON
        a.type_id=b.type_id
        left join
        php_goods_attr c
        ON
        b.id=c.attr_id;

    库存量表：提交的时候可能是两个属性的值,那么会有一件商品对应的多个属性的id(即商品属性表的id,可以多个id)存到 goods_attr_id中
        goods_attr_id存的是一件商品的每个属性的id,也就是php_goods_attr商品属性表中的id

        注意：库存量表->把这件商品的每个属性值的组合(如:32g->白色,64g->粉色还有多少部等等)都设置一个库存量
     create table php_goods_number(
         goods_id mediumint unsigned not null comment '商品id',
         goods_number mediumint not null default '0' comment '库存量',
         `goods_attr_id_list varchar(150) not null comment '商品属性表的ID(要知道什么属性什么值),如果有多个,就用程序拼成字符串存到这个字段中',
         key goods_id(goods_id),
         key goods_attr_id(goods_attr_id)
     )engine=innoDB default charset=utf8 comment '商品属性';


    商品相册表
    create table if not exists php_goods_pic(
         id mediumint unsigned not null auto_increment comment 'id',
         pic varchar(150) not null comment '原图',
         sm_pic varchar(150) not null comment '小图',
         mid_pic varchar(150) not null comment '中图',
         big_pic varchar(150) not null comment '大图',
         goods_id mediumint unsigned not null comment '商品id',
         primary key id(id),
         key goods_id(goods_id)
     )engine=innoDB default charset=utf8 comment '商品相册';


/************************* RBAC *************************/
RBAC：Role Based Access Control 基于角色的访问控制,也就是权限

    权限表
    drop table if exists php_privilege;
    create table php_privilege(
        id mediumint unsigned not null auto_increment comment 'ID',
        pri_name varchar(30) not null comment '权限名称',
        module_name varchar(30) not null default '' comment '模块名称',
        controller_name varchar(30) not null default '' comment '控制器名称',
        action_name varchar(30) not null default '' comment '方法名称',
        parent_id mediumint unsigned not null default '0' comment '上级权限id',
        primary key(id)
    )engine=innoDB default charset=utf8 comment '权限';

    权限与角色是多对多的关系
    角色权限中间表
    drop table if exists php_role_pri;
    create table php_role_pri(
        pri_id mediumint unsigned not null comment '权限id',
        role_id mediumint unsigned not null comment '角色id',
        key pri_id(pri_id),
        key role_id(role_id)
    )engine=innoDB default charset=utf8 comment '角色权限';

    角色表
    drop table if exists php_role;
    create table php_role(
        id mediumint unsigned not null auto_increment comment 'ID',
        role_name varchar(30) not null comment '角色名称',
        primary key(id)
    )engine=innoDB default charset=utf8 comment '角色';

    管理员与角色也是多对多的关系
    管理员角色中间表
    drop table if exists php_admin_role;
    create table php_admin_role(
        admin_id mediumint unsigned not null comment '管理员id',
        role_id mediumint unsigned not null comment '角色id',
        key admin_id(admin_id),
        key role_id(role_id)
    )engine=innoDB default charset=utf8 comment '管理员角色';

    管理员表
    drop table if exists php_admin;
    create table php_admin(
        id mediumint unsigned not null auto_increment comment 'ID',
        username varchar(30) not null comment '用户名',
        password char(32) not null comment '密码',
        primary key(id)
    )engine=innoDB default charset=utf8 comment '管理员';
    新添加一个超级管理员用户
    insert into php_admin values(1,'root','58358d38ee6f19a6948529aadb2fd12c');



    前台用户注册登陆表
    drop table if exists php_member;
    create table php_member(
        id mediumint unsigned not null auto_increment comment 'ID',
        username varchar(30) not null comment '用户名',
        password char(32) not null comment '密码',
        face varchar(150) not null default '0' comment '头像',
        jifen mediumint unsigned not null default '0' comment '积分',
        primary key(id)
    )engine=innoDB default charset=utf8 comment '用户会员';


    购物车表
    drop table if exists php_cart;
    create table php_cart(
        id mediumint unsigned not null auto_increment comment 'id',
        goods_id mediumint unsigned not null comment '商品id',
        goods_attr_id varchar(150) not null default '' comment '商品属性id',
        goods_number mediumint unsigned not null comment '购买的数量',
        member_id mediumint unsigned not null comment '会员id',
        primary key(id),
        key member_id(member_id)
    )engine=innoDB default charset=utf8 comment '购物车';


    订单表
    drop table if exists php_order;
    create table php_order(
        id mediumint unsigned not null auto_increment comment 'id',
        member_id mediumint unsigned not null comment '会员id',
        addtime int unsigned not null comment '下单时间',
        pay_status enum('是','否') not null default '否' comment '支付状态',
        pay_time int unsigned not null default '0' comment '支付时间',
        total_price decimal(10,2) not null comment '订单总价',
        shr_name varchar(30) not null comment '收货人姓名',
        shr_tel varchar(30) not null comment '收货人电话',
        shr_province varchar(30) not null comment '收货人省',
        shr_city varchar(30) not null comment '收货人城市',
        shr_area varchar(30) not null comment '收货人地区',
        shr_address varchar(30) not null comment '收货人详细地址',
        post_status tinyint unsigned not null default '0' comment '发货状态,0:未发货,1:已发货,2:已收到货',
        post_number varchar(30) not null default '' comment '快递号',
        primary key(id),
        key member_id(member_id),
        key addtime(addtime)
    )engine=innoDB default charset=utf8 comment '订单基本信息';

    订单商品表
    drop table if exists php_order_goods;
    create table php_order_goods(
        id mediumint unsigned not null auto_increment comment 'id',
        order_id mediumint unsigned not null comment '订单id',
        goods_id mediumint unsigned not null comment '商品id',
        goods_attr_id varchar(150) not null default '' comment '商品属性id',
        goods_number mediumint unsigned not null comment '购买的数量',
        price decimal(10,2) not null comment '购买价格',
        primary key(id),
        key order_id(order_id),
        key goods_id(goods_id)
    )engine=innoDB default charset=utf8 comment '订单商品表';


    评论表
    drop table if exists php_comment;
    create table php_comment(
        id mediumint unsigned not null auto_increment comment 'ID',
        goods_id mediumint unsigned not null comment '商品id',
        member_id mediumint unsigned not null comment '会员id',
        content varchar(200) not null  comment '评论内容',
        addtime datetime not null comment '发表时间',
        star tinyint unsigned  not null comment '分值',
        click_count smallint unsigned not null default '0' comment '点赞',
        primary key(id),
        key goods_id(goods_id),
        key member_id(member_id)
    )engine=innoDB default charset=utf8 comment '评论';


    评论回复表
    drop table if exists php_comment_reply;
    create table php_comment_reply(
        id mediumint unsigned not null auto_increment comment 'ID',
        comment_id mediumint unsigned not null comment '评论id',
        member_id mediumint unsigned not null comment '会员id',
        content varchar(200) not null  comment '评论内容',
        addtime date not null comment '发表时间',
        primary key(id),
        key member_id(member_id),
        key comment_id(comment_id)
    )engine=innoDB default charset=utf8 comment '评论回复表';


    商品印象表
    drop table if exists php_yinxiang;
    create table php_yinxiang(
        id mediumint unsigned not null auto_increment comment 'ID',
        goods_id mediumint unsigned not null comment '商品id',
        yx_name varchar(30) not null comment '印象名称',
        yx_count smallint not null default '1' comment '印象次数',
        primary key(id),
        key goods_id(goods_id)
    )engine=innoDB default charset=utf8 comment '印象表';


    drop table if exists php_sphinx_id;
    create table php_sphinx_id(
        id mediumint unsigned not null default '0' comment '已经创建好索引的最后一件商品的id'
    )engine=innoDB default charset=utf8 comment'sphinx';






